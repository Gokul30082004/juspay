import java.util.*;

class Main{
    public static int dest;
    public static ArrayList<ArrayList<Integer>> list;
    public static int ans;
    public static int vis[];
    public static Set<Integer> set;
    public static boolean flag = false;
    
    
    public static void dfs(int node){
        
        set.add(node);
        
        if(node == dest)
            flag = true;
        
        for(int child : list.get(node)){
            
            if(!set.contains(child))
                dfs(child);
            
        }
    }
    
    public static void main(String args[]){
        
        Scanner s = new Scanner(System.in);
        set = new HashSet<>();
        
        int n = s.nextInt();
        
        list = new ArrayList<>();
        ans = 0;
        
        vis = new int[n];
        
        for(int i = 0; i < n; i++){
            
            vis[i] = 0;
            list.add(new ArrayList<>());
        }
        
        int num_edges = s.nextInt();
        
        for(int i = 0; i < num_edges; i++){
            int x = s.nextInt();
            int y = s.nextInt();
            list.get(x).add(y);
            list.get(y).add(x);
        }
        
        int src = s.nextInt();
        dest = s.nextInt();
        
        for(int it : list.get(src)){
            
            if(vis[it] == 2)
                ++ans;
            else if(vis[it] == 0){
                dfs(it);
                
                if(flag) 
                    ++ans;
                
                
                for(int nodes : set){
                    vis[nodes] = flag ? 2 : 1;
                }
                flag = false;
                set.clear();
            }
        }
        
        System.out.println(ans);
    }    
    
    
}
